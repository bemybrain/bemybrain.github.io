"use strict";function isAuthenticated(a,b){var c=b.getUserInfo();return c?a.when(c):a.reject({authenticated:!1})}function logout(a,b,c,d){d.reset(),b.logout().then(function(){c.go("main.login",{},{reload:!0})})}angular.module("webAppApp",["ngAnimate","ngCookies","ngTouch","ui.router","ngTagsInput","ngDialog","ngAnimate","mgcrea.ngStrap","ngLodash","chart.js"]).config(["$stateProvider","$urlRouterProvider","$locationProvider",function(a,b,c){b.otherwise("/"),a.state("main",{"abstract":!0,template:"<ui-view/>",controller:"MainCtrl"}).state("main.home",{url:"/",templateUrl:"views/main.html",controller:"MainCtrl"}).state("main.questions",{url:"/questions?userId",templateUrl:"views/questions.html",controller:"QuestionsCtrl"}).state("main.question",{url:"/questions/:id",templateUrl:"views/question.html",controller:"QuestionCtrl",resolve:{auth:isAuthenticated}}).state("main.editquestion",{url:"/questions/:id/edit",templateUrl:"views/edit-question.html",controller:"QuestionCtrl",resolve:{auth:isAuthenticated}}).state("main.newquestion",{url:"/new-question",templateUrl:"views/new-question.html",controller:"NewQuestionCtrl",resolve:{auth:isAuthenticated}}).state("main.myprofile",{url:"/my-profile",templateUrl:"views/my-profile.html",controller:"UserCtrl",resolve:{auth:isAuthenticated}}).state("main.login",{url:"/login",controller:"MainCtrl",templateUrl:"views/login.html"}).state("logout",{url:"/logout",controller:"MainCtrl",resolve:{logout:logout}}).state("main.mydashboard",{url:"/dashboard",controller:"DashboardCtrl",templateUrl:"views/dashboard.html"}).state("main.dashboard",{url:"/dashboard/:userId",controller:"DashboardCtrl",templateUrl:"views/dashboard.html"})}]).run(["$rootScope","$state",function(a,b){a.$on("$stateChangeError",function(a,c,d,e,f,g){g.authenticated===!1&&b.go("main.login",{},{reload:!0})})}]).run(["$rootScope",function(a,b){a.$on("$stateChangeSuccess",function(){document.body.scrollTop=document.documentElement.scrollTop=0})}]).config(["$httpProvider",function(a){a.defaults.withCredentials=!0}]),isAuthenticated.$inject=["$q","AuthenticationService"],logout.$inject=["$q","AuthenticationService","$state","Dashboard"],angular.module("webAppApp").constant("ENV",{name:"production",apiEndpoint:"http://v0-bemybrain.rhcloud.com/api"}),angular.module("webAppApp").factory("Questions",["ENV","$http",function(a,b){return{create:function(c){return b({method:"POST",url:a.apiEndpoint+"/questions",data:{title:c.title,body:c.body,author:c.author,tags:c.tags}})},edit:function(c){return b({method:"PUT",url:a.apiEndpoint+"/questions/"+c._id,data:{title:c.title,body:c.body,tags:c.tags,status:c.status}})},findAll:function(c){return b({method:"GET",url:a.apiEndpoint+"/questions",params:c||{}})},findOne:function(c){return b({method:"GET",url:a.apiEndpoint+"/questions/"+c})},"delete":function(c){return b({method:"DELETE",url:a.apiEndpoint+"/questions/"+c})},upvote:function(c){return b({method:"PUT",url:a.apiEndpoint+"/questions/"+c+"/upvote"})},downvote:function(c){return b({method:"PUT",url:a.apiEndpoint+"/questions/"+c+"/downvote"})}}}]),angular.module("webAppApp").factory("User",["ENV","$http",function(a,b){return{findAll:function(){return b({method:"GET",url:a.apiEndpoint+"/users"})},findOne:function(c){return b({method:"GET",url:a.apiEndpoint+"/users/"+c})},update:function(c,d){return b({method:"PUT",url:a.apiEndpoint+"/users/"+c,data:{name:d.name,username:d.username,email:d.email,tags:d.tags}})}}}]),angular.module("webAppApp").factory("Answers",["ENV","$http",function(a,b){return{findByQuestion:function(c){return b({method:"GET",url:a.apiEndpoint+"/answers",params:{question:c}})},findAll:function(){return b({method:"GET",url:a.apiEndpoint+"/answers"})},findOne:function(c){return b({method:"GET",url:a.apiEndpoint+"/answers/"+c})},sendAnswer:function(c){return b({method:"POST",url:a.apiEndpoint+"/answers",data:{body:c.body,author:c.author,question:c.question}})},upvote:function(c){return b({method:"PUT",url:a.apiEndpoint+"/answers/"+c+"/upvote"})},downvote:function(c){return b({method:"PUT",url:a.apiEndpoint+"/answers/"+c+"/downvote"})}}}]),angular.module("webAppApp").factory("AuthenticationService",["$http","$q","$cookies","ENV",function(a,b,c,d){function e(e,f){var g=b.defer();return a.post(d.apiEndpoint+"/login",{username:e,password:f}).then(function(a){m=a.data,c.put("userInfo",JSON.stringify(m)),g.resolve(m)},function(a){console.log(a),g.reject(a)}),g.promise}function f(c){var e=b.defer();return a.post(d.apiEndpoint+"/signup",{username:c.username,password:c.password,name:c.name,email:c.email}).then(function(a){m=a.data,i(m),e.resolve(m)},function(a){console.log(a),e.reject(a)}),e.promise}function g(){var e=b.defer();return a({method:"GET",url:d.apiEndpoint+"/logout"}).then(function(a){c.remove("userInfo"),m=null,e.resolve(a)},function(a){e.reject(a)}),e.promise}function h(){return m}function i(a){return c.put("userInfo",JSON.stringify(a)),m}function j(){return m&&null!==m?!0:!1}function k(){var a=c.get("userInfo");a&&(m=JSON.parse(a))}function l(){var c=b.defer();return a.get(d.apiEndpoint+"/loggedin").then(function(a){c.resolve(a)},function(a){console.log(a),c.reject(a)}),c.promise}var m;return k(),{signup:f,login:e,getUserInfo:h,setUserInfo:i,isLoggedIn:j,isAuthenticated:l,logout:g}}]),angular.module("webAppApp").factory("Tag",["ENV","$http","$q",function(a,b,c){function d(a){return e.length=0,_.forEach(a,function(a){e.push(a)}),e}var e=[];return{reset:function(){e.length=0},getAll:function(){return e},set:function(){var e=c.defer(),f=b({method:"GET",url:a.apiEndpoint+"/tags/"});return f.then(function(a){e.resolve(d(a.data))})["catch"](e.reject),e.promise},create:function(c){return b({method:"POST",url:a.apiEndpoint+"/tags",data:{name:c.name,related:c.related||[]}})},findAll:function(c){return b({method:"GET",url:a.apiEndpoint+"/tags",params:c||{}})},findOne:function(c){return b({method:"GET",url:a.apiEndpoint+"/tags/"+c})},"delete":function(c){return b({method:"DELETE",url:a.apiEndpoint+"/tags/"+c})}}}]),angular.module("webAppApp").service("AlertMessage",["ngDialog","$timeout","$alert",function(a,b,c){function d(a,d,e){var f=c({title:a,content:d,dismissable:!0,placement:"bottom-right",type:e||"info",container:"#alerts-container",show:!0});return b(function(){f.hide()},5e3),f}function e(b,c){a.close();var d=a.openConfirm({template:"views/modals/"+b+".html",showClose:!0,trapFocus:!0,closeByDocument:!0,closeByEscape:!0}).then(function(){c&&c()});return d}return{show:d,confirm:e}}]),angular.module("webAppApp").controller("MainCtrl",["$scope","$location","$state","AuthenticationService","AlertMessage","Dashboard",function(a,b,c,d,e,f){a.userInfo=d.getUserInfo()||null,a.currentState=c.current.name,a.newUser={},a.loading=!1,a.signup=function(b){if(!b)var b=a.newUser;b.name&&b.email&&b.username&&b.password&&(a.loading=!0,d.signup(b).then(function(b){b._id&&(a.getUserInfo(),c.go("main.myprofile"),e.show("Usuário cadastrado com sucesso!","","success"))})["catch"](function(a){401===a.status?e.show("Usuário já existente.","Faça login ou tente novamente com informações diferentes.","warning"):e.show("Algo de errado não está certo.","Recarregue a página e tente novamente.","warning")})["finally"](function(){a.loading=!1}))},a.login=function(b,f){a.loading=!0;var b=b||a.login.username,f=f||a.login.password;d.login(b,f).then(function(b){if(a.getUserInfo(),c.go("main.mydashboard"),b._id){var d="Login efetuado com sucesso!";b.name&&(d="Bem vindo novamente, "+b.name+"!"),e.show(d,"","success")}})["catch"](function(a){401===a.status?e.show("Usuário ou senha incorretos.","Tente novamente.","warning"):e.show("Algo de errado não está certo.","Recarregue a página e tente novamente.","warning")})["finally"](function(){a.loading=!1})},a.logout=function(){f.reset(),d.logout()},a.isLoggedIn=function(){return d.isLoggedIn()},a.getUserInfo=function(){a.userInfo=d.getUserInfo()}}]),angular.module("webAppApp").controller("QuestionsCtrl",["$scope","$state","$stateParams","Questions","User","AuthenticationService","AlertMessage",function(a,b,c,d,e,f,g){function h(){l&&("my-questions"===l&&(l=f.getUserInfo()._id),m.author=l),i(m)}function i(b,c){a.loading=!0,d.findAll(b).then(function(b){a.questions=b.data,c&&c()})["catch"](k)["finally"](function(){a.loading=!1})}function j(a){return a?void d["delete"](a).then(function(a){h(),g.show("Feito!","Pergunta apagada com sucesso.")})["catch"](k):!1}function k(a){console.log(a),g.show("Ops!","Ocorreu um erro inesperado.","danger")}var l=c.userId||null,m={};a.questions=[],a.loading=!1,a.confirmDelete=function(a){g.confirm("delete-question",function(){j(a)})},a.loadMore=function(){a.loading=!0;var b=_.assign({},m,{skip:a.questions.length});d.findAll(b).then(function(b){_.map(b.data,function(b){a.questions.push(b)})})["catch"](k)["finally"](function(){a.loading=!1})},h()}]),angular.module("webAppApp").controller("QuestionCtrl",["$scope","$state","$stateParams","Questions","Answers","User","AuthenticationService","AlertMessage","Tag",function(a,b,c,d,e,f,g,h,i){function j(){k(),l(c.id,function(){m()})}function k(){return i.set()["catch"](o)}function l(b,e){b||(b=c.id),d.findOne(b).then(function(b){a.question=b.data,a.isAuthor=p._id===a.question.author._id,e&&e(b)},function(a){console.log(a),h.show("Ops!","Ocorreu um erro inesperado.","danger")})}function m(b,c){b||(b=a.question._id),e.findByQuestion(b).then(function(b){a.answers=b.data,c&&c(b)},function(a){console.log(a),h.show("Ops!","Ocorreu um erro inesperado.","danger")})}function n(a,b){e.sendAnswer(a).then(function(a){h.show("Pronto!","Resposta enviada com sucesso.")})["catch"](function(a){console.log(a),h.show("Ops!","Ocorreu um erro inesperado.","danger")})["finally"](b)}function o(a){console.log(a),h.show("Ops!","Ocorreu um erro inesperado.","danger")}var p=g.getUserInfo(),q=i.getAll();a.newAnswer={},a.tags=q,a.loading=!1,a.isAuthor=!1,a.currentUser=p,a.isLoggedIn=function(){return g.isLoggedIn()},a.sendAnswer=function(){a.loading=!0;var b=g.getUserInfo(),c={body:a.newAnswer.body,author:b._id,question:a.question._id};n(c,function(){m(),a.newAnswer={},a.loading=!1})},a.editQuestion=function(){a.loading=!0;var c={};_.assign(c,a.question),c.tags&&(c.tags=_.map(c.tags,"_id")),d.edit(c).then(function(c){h.show("Pronto!","Resposta enviada com sucesso."),_.assign(a.question,c.data),b.go("main.question",{id:c.data._id})})["catch"](function(a){console.log(a),h.show("Ops!","Ocorreu um erro inesperado.","danger")})["finally"](function(){a.loading=!1})},a.loadTags=function(a){return _.filter(q,function(b){return b.name.toUpperCase().includes(a.toUpperCase())})},a.isAuthorsChoice=function(b){return-1!==b.upvotes.indexOf(a.question.author._id)},j()}]),angular.module("webAppApp").controller("NewQuestionCtrl",["$scope","$state","Questions","User","AuthenticationService","AlertMessage","Tag",function(a,b,c,d,e,f,g){function h(){i()}function i(){return g.set()["catch"](j)}function j(a){console.log(a),f.show("Ops!","Ocorreu um erro inesperado.","danger")}var k=g.getAll();a.tags=k,a.newQuestion={},a.loading=!1,a.isLoggedIn=function(){return e.isLoggedIn()},a.newQuestion=function(d){a.loading=!0;var f=e.getUserInfo(),d={title:a.newQuestion.title,body:a.newQuestion.body,author:f._id,tags:_.map(a.newQuestion.tags,"_id")};c.create(d).then(function(a){console.log(a),b.go("main.question",{id:a.data._id})})["catch"](function(a){console.log(a)})["finally"](function(){a.loading=!1})},a.loadTags=function(a){return _.filter(k,function(b){return b.name.toUpperCase().includes(a.toUpperCase())})},h()}]),angular.module("webAppApp").controller("UserCtrl",["$scope","$state","User","AuthenticationService","Tag","AlertMessage",function(a,b,c,d,e,f){function g(){h()}function h(){return e.set()["catch"](i)}function i(a){console.log(a),f.show("Ops!","Ocorreu um erro inesperado.","danger")}var j=e.getAll();a.tags=j,a.profile=angular.copy(d.getUserInfo())||{},a.isLoggedIn=function(){return d.isLoggedIn()},a.getUserInfo=function(){a.profile=d.getUserInfo()},a.updateProfile=function(e,g){a.loading=!0,e||(e=a.profile._id),g||(g={}),g.name=g.name||a.profile.name,g.username=g.username||a.profile.username,g.email=g.email||a.profile.email,g.tags=g.tags||a.profile.tags,g.tags&&(g.tags=_.map(g.tags,"_id")),c.update(e,g).then(function(a){d.setUserInfo(a.data),f.show("Usuário alterado com sucesso!"),b.go("main.questions")})["catch"](function(a){f.show("Ops!","Ocorreu um erro inesperado.","danger")})["finally"](function(b){a.loading=!1})},a.loadTags=function(a){return _.filter(j,function(b){return b.name.toUpperCase().includes(a.toUpperCase())})},g()}]),angular.module("webAppApp").controller("HomectrlCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("webAppApp").controller("DashboardCtrl",["$scope","$state","$stateParams","AuthenticationService","AlertMessage","Dashboard","Tag","User",function(a,b,c,d,e,f,g,h){function i(){a.chart=s,a.dashboard=q,p&&(j(p),k().then(function(){l(p)},n))}function j(b){return h.findOne(b).then(function(b){return a.user=b.data,a.user})}function k(){return g.set()}function l(a){return f.set(a).then(function(a){m(a)},n)}function m(a){s.labels=_.map(a.tags,function(a,b){var c=_.findIndex(r,{_id:b});return r[c].name}),s.data=_.map(a.tags,function(a,b){return a})}function n(a){console.log(a),e.show("Ops!","Ocorreu um erro inesperado.","danger")}var o=d.getUserInfo(),p=c.userId||o._id,q=f.get(),r=g.getAll(),s={labels:[],data:[],options:{scales:{xAxes:[{gridLines:{display:!1}}],yAxes:[{gridLines:{display:!1}}]}}};i()}]),angular.module("webAppApp").directive("voteBox",["$q","Answers","Questions","AlertMessage","AuthenticationService",function(a,b,c,d,e){return{templateUrl:"../../views/templates/vote-box.html",restrict:"E",scope:{question:"=",answer:"="},link:function(a,f,g){function h(){a.provider=o,a.upvote=l,a.downvote=m,a.hasVoted=i}function i(a){var b=[];return b=a?"downvote"===a||"down"===a?o.downvotes:o.upvotes:o.upvotes.concat(o.downvotes),-1!==b.indexOf(q)}function j(){var a=o.upvotes.indexOf(q),b=o.downvotes.indexOf(q),c=-1!==a,d=-1!==b;c?o.upvotes.splice(a,1):(d&&o.downvotes.splice(b,1),o.upvotes.push(q)),o.score=o.upvotes.length-o.downvotes.length}function k(){var a=o.upvotes.indexOf(q),b=o.downvotes.indexOf(q),c=-1!==a,d=-1!==b;d?o.downvotes.splice(b,1):(c&&o.upvotes.splice(a,1),o.downvotes.push(q)),o.score=o.upvotes.length-o.downvotes.length}function l(){function a(a){_.assign(o,f),d.show("Ops!","Ocorreu um erro inesperado.","danger"),console.log(a)}var e,f=angular.copy(o);return j(),e="answer"===n?b.upvote(o._id):c.upvote(o._id),e["catch"](a),e}function m(){function a(a){_.assign(o,f),d.show("Ops!","Ocorreu um erro inesperado.","danger"),console.log(a)}var e,f=angular.copy(o);return k(),e="answer"===n?b.downvote(o._id):c.downvote(o._id),e["catch"](a),e}var n=a.answer?"answer":"question",o=a[n],p=e.getUserInfo(),q=p?p._id:null;h()}}}]),angular.module("webAppApp").factory("Dashboard",["ENV","$http","$q","ngDialog","AuthenticationService",function(a,b,c,d,e){function f(a){d.openConfirm({template:"views/modals/level-up.html",showClose:!0,trapFocus:!0,closeByDocument:!0,closeByEscape:!0,data:a})}function g(a,b){var c=e.getUserInfo(),d=c._id===a,g={upvotes:b.upvotes,downvotes:b.downvotes,score:b.score,questions:b.questions,answers:b.answers,tags:b.tags,rank:b.rank,rules:b.rules};return d&&h.rank<g.rank&&f(g),_.assign(h,g),h}var h={};return{reset:function(){_.forEach(_.keys(h),function(a){delete h[a]})},get:function(){return h},set:function(d){var e=c.defer(),f=b({method:"GET",url:a.apiEndpoint+"/dashboard/"+d});return f.then(function(a){e.resolve(g(d,a.data))})["catch"](e.reject),e.promise}}}]),angular.module("webAppApp").directive("mainSidebar",["Tag","Dashboard","AuthenticationService","AlertMessage",function(a,b,c,d){return{templateUrl:"../../views/templates/main-sidebar.html",restrict:"E",link:function(e,f,g){function h(){e.dashboard=n,e.tags=m,i(),j()}function i(){return a.set()["catch"](k)}function j(){return b.set(l._id)["catch"](k)}function k(a){console.log(a),d.show("Ops!","Ocorreu um erro inesperado.","danger")}var l=c.getUserInfo(),m=a.getAll(),n=b.get();h()}}}]),angular.module("webAppApp").directive("userAvatar",function(){return{templateUrl:"../../views/templates/user-avatar.html",restrict:"E",scope:{user:"="},link:function(a,b,c){}}}),angular.module("webAppApp").run(["$templateCache",function(a){a.put("views/dashboard.html",'<div class="container"> <div class="row" style="padding: 20px 0 60px"> <div class="col-lg-10 col-lg-offset-1"> <h1>{{ user.name }}</h1> <hr> <section class="user-profile" style="margin-top: 60px"> <div class="row"> <div class="col-md-6 text-center medal-name"> <ul class="list-inline"> <li ng-repeat="i in [0,1,2,3,4]" ng-if="dashboard.rank >= i"> <img ng-src="images/rank/rank-{{ i }}.png" alt="" class="center-block"> </li> </ul> <h3 class="text-uppercase">{{ dashboard.rules[dashboard.rank].type }} </h3> <br> <div class="text-center"> <h5 class="text-uppercase">Próxima medalha:</h5> <p><span class="label label-default" ng-class="{ \'label-success\': dashboard.questions >= dashboard.rules[dashboard.rank + 1].q }">{{ dashboard.questions + \'/\' + dashboard.rules[dashboard.rank + 1].q }} Perguntas</span></p> <p><span class="label label-default" ng-class="{ \'label-success\': dashboard.answers >= dashboard.rules[dashboard.rank + 1].a }">{{ dashboard.answers + \'/\' + dashboard.rules[dashboard.rank + 1].a }} Respostas</span></p> <p><span class="label label-default" ng-class="{ \'label-success\': dashboard.score >= dashboard.rules[dashboard.rank + 1].s }">{{ dashboard.score + \'/\' + dashboard.rules[dashboard.rank + 1].s }} Upvotes - Downvotes</span></p> </div> </div> <!-- PERFORMANCE - LIKES E COMMENTS  --> <div class="col-md-6"> <div class="well"> <div class="performance-meta-profile"> <div> <h6 class="text-center"> <span><img src="images/003-star.svg" alt="" width="200" height="100" class="center-block"></span><br> {{ dashboard.upvotes }} upvotes </h6> </div> <br> <br> <div> <h6 class="text-center"> <span><img src="images/002-chat.svg" alt="" width="200" height="100" alt="" class="center-block"></span><br> {{ dashboard.answers }} respostas </h6> </div> </div> </div> </div> </div> </section> <section style="margin-top: 60px" ng-if="dashboard.answers"> <h3>Desempenho</h3> <hr> <div class="row"> <div class="col-sm-6"> <div> <br> <h4>Número de respostas por categoria</h4> <br> <ul> <li ng-repeat="(i, label) in chart.labels"> <b>{{ label }}:</b> {{ chart.data[i] }} </li> </ul> </div> </div> <div class="col-sm-6" ng-if="dashboard.answers"> <canvas id="doughnut" class="chart chart-doughnut" chart-data="chart.data" chart-labels="chart.labels" class="center-block"></canvas> </div> </div> </section> <br> </div> </div> </div>'),a.put("views/edit-question.html",'<div class="container"> <div class="row"> <div class="col-md-8 col-md-offset-2"> <h1>Editar Pergunta</h1> <br> <form name="editQuestionForm" novalidate ng-submit="editQuestion()"> <div class="form-group"> <label class="control-label">Título</label> <input ng-model="question.title" type="text" class="form-control" placeholder="Título da pergunta" name="title" required> <p ng-if="editQuestionForm.title.$invalid && newQuestionForm.$submitted" class="help-block text-danger">Este campo é obrigatório</p> </div> <div class="form-group"> <label class="control-label">Conteúdo</label> <textarea name="body" ng-model="question.body" class="form-control" rows="10" placeholder="Descreva detalhadamente sua dúvida..." required></textarea> <p ng-if="editQuestionForm.body.$invalid && editQuestionForm.$submitted" class="help-block text-danger">Este campo é obrigatório</p> </div> <div class="form-group"> <label>Tags</label> <tags-input ng-model="question.tags" display-property="name" add-from-autocomplete-only="true" replace-spaces-with-dashes="false" ng-disabled="!tags.length"> <auto-complete source="loadTags($query)"></auto-complete> </tags-input> </div> <div class="form-group"> <button type="submit" class="btn btn-success btn-lg btn-block" ng-disabled="!editQuestionForm.$valid || loading">Salvar</button><br> </div> </form> </div> </div> </div>'),a.put("views/login.html",'<!-- Contact Section --> <section id="login"> <div class="container"> <div class="row"> <div class="col-lg-12 text-center"> <h2>Login</h2> <hr class="star-primary"> <p>Faça login para continuar</p> </div> </div> <div class="row"> <div class="col-lg-8 col-lg-offset-2"> <!-- To configure the contact form email address, go to mail/contact_me.php and update the email address in the PHP file on line 19. --> <!-- The form should work on most web servers, but if the form is not working you may need to configure your web server differently. --> <form ng-submit="login()" novalidate> <div class="row control-group"> <div class="form-group col-xs-12 floating-label-form-group controls"> <label>Usuário</label> <input ng-disabled="loading" ng-model="login.username" type="text" class="form-control" placeholder="Usuário" id="user" required data-validation-required-message="Por favor digite um nome de Usuário."> <p class="help-block text-danger"></p> </div> </div> <div class="row control-group"> <div class="form-group col-xs-12 floating-label-form-group controls"> <label>Senha</label> <input ng-disabled="loading" ng-model="login.password" class="form-control" type="password" placeholder="Senha" id="password" required data-validation-required-message="Por favor digite uma Senha."> <p class="help-block text-danger"></p> </div> </div> <br> <div id="success"></div> <div class="row"> <div class="form-group col-xs-12"> <button type="submit" ng-disabled="loading" class="btn btn-success btn-lg">Login</button><br> </div> </div> </form> </div> </div> </div> </section> <section class="bg-highlight main-section"> <div class="container"> <div class="row"> <div class="col-lg-12 text-center"> <h2>Cadastre-se</h2> </div> </div> <div class="row"> <div class="col-lg-8 col-lg-offset-2"> <form name="signupForm" id="signupForm" ng-submit="signup()" novalidate> <div class="row control-group"> <div class="form-group col-xs-12 floating-label-form-group controls"> <label>Nome</label> <input ng-disabled="loading" type="text" class="form-control" placeholder="Nome" name="name" ng-model="newUser.name" required> </div> </div> <div class="row control-group"> <div class="form-group col-xs-12 floating-label-form-group controls"> <label>Email</label> <input ng-disabled="loading" type="email" class="form-control" placeholder="Email" name="email" ng-model="newUser.email" required> </div> </div> <div class="row control-group"> <div class="form-group col-xs-12 floating-label-form-group controls"> <label>Usuário</label> <input ng-disabled="loading" type="text" class="form-control" placeholder="Usuário" name="username" ng-model="newUser.username" required> </div> </div> <div class="row control-group"> <div class="form-group col-xs-12 floating-label-form-group controls"> <label>Senha</label> <input ng-disabled="loading" class="form-control" type="password" placeholder="Senha" name="password" ng-model="newUser.password" required> </div> </div> <br> <div class="row"> <div class="form-group col-xs-12"> <button ng-disabled="loading || !signupForm.$valid" class="btn btn-success btn-lg" type="submit">Cadastrar</button><br> <p><small>Já é Cadastrado? <a ui-sref="login">Clique Aqui</a></small></p> </div> </div> </form> </div> </div> </div> </section>'),a.put("views/main.html",'<!-- Header --> <section class="section-home"> <div class="home-hero"> <img class="img-responsive center-block" src="images/logo.png" alt=""> <br> <p><big>EAD - Pergunte - Responda - Aprenda</big></p> </div> </section> <!-- About Section --> <section class="main-section"> <div class="container"> <div class="row"> <div class="col-lg-12 text-center"> <h2>Sobre</h2> <hr class="star-light"> </div> </div> <div class="row"> <div class="col-md-8 col-lg-offset-2 text-center"> <p>O Be My Brain é um aplicativo que conecta estudantes com professores voluntários por meio de mensagens instantâneas, troca de arquivos ou chamadas de áudio e vídeo.</p> <br> <p>Como estudante, você pode categorizar sua dúvida no tema que quiser. No momento que você posta esta dúvida, os professores disponíveis recebem uma notificação e te ajudam a solucionar o problema em tempo real.</p> <br> <p>Como professor, você pode escolher os dias, horários, temas e número de vezes que deseja receber notificações de dúvidas.</p> </div> </div> </div> </section> <section class="bg-highlight main-section" ng-if="!isLoggedIn()"> <div class="container"> <div class="row"> <div class="col-lg-12 text-center"> <h2>Cadastre-se</h2> </div> </div> <div class="row"> <div class="col-lg-8 col-lg-offset-2"> <form name="signupForm" id="signupForm" ng-submit="signup()" novalidate> <div class="row control-group"> <div class="form-group col-xs-12 floating-label-form-group controls"> <label>Nome</label> <input type="text" class="form-control" placeholder="Nome" name="name" ng-model="newUser.name" required> <p ng-if="signupForm.name.$error && signupForm.$submitted" class="help-block text-danger">Por favor digite seu Nome</p> </div> </div> <div class="row control-group"> <div class="form-group col-xs-12 floating-label-form-group controls"> <label>Email</label> <input type="email" class="form-control" placeholder="Email" name="email" ng-model="newUser.email" required> <p ng-if="signupForm.email.$error && signupForm.$submitted" class="help-block text-danger">Por favor digite seu endereço de Email.</p> </div> </div> <div class="row control-group"> <div class="form-group col-xs-12 floating-label-form-group controls"> <label>Usuário</label> <input type="text" class="form-control" placeholder="Usuário" name="username" ng-model="newUser.username" required> <p ng-if="signupForm.username.$error && signupForm.$submitted" class="help-block text-danger">Por favor digite um nome de Usuário.</p> </div> </div> <div class="row control-group"> <div class="form-group col-xs-12 floating-label-form-group controls"> <label>Senha</label> <input class="form-control" type="password" placeholder="Senha" name="password" ng-model="newUser.password" required> <p ng-if="signupForm.password.$error && signupForm.$submitted" class="help-block text-danger">Por favor digite uma Senha.</p> </div> </div> <br> <div class="row"> <div class="form-group col-xs-12"> <button class="btn btn-success btn-lg" type="submit">Cadastrar</button><br> <p><small>Já é Cadastrado? <a ui-sref="login">Clique Aqui</a></small></p> </div> </div> </form> </div> </div> </div> </section>'),a.put("views/modals/delete-question.html",'<div> <h1>Tem certeza disso?</h1> <p>Deseja apagar a pergunta selecionada?</p> <br> <div class="row"> <div class="col-xs-6"> <button class="btn btn-primary" type="button" ng-click="closeThisDialog()">Cancelar</button> </div> <div class="col-xs-6 text-right"> <button class="btn btn-default" type="button" ng-click="confirm()">Apagar</button> </div> </div> </div>'),a.put("views/modals/level-up.html",'<div class="text-center"> <h1>Parabéns!</h1> <p>Você conquistou uma nova medalha:</p> <br> <div class="text-center medal-name"> <div ng-switch="ngDialogData.rank"> <img ng-switch-default src="images/rank/rank-0.png" alt="" class="center-block"> <img ng-switch-when="1" src="images/rank/rank-1.png" alt="" class="center-block"> <img ng-switch-when="2" src="images/rank/rank-2.png" alt="" class="center-block"> <img ng-switch-when="3" src="images/rank/rank-3.png" alt="" class="center-block"> <img ng-switch-when="4" src="images/rank/rank-4.png" alt="" class="center-block"> </div> <h3 class="text-uppercase">{{ ngDialogData.rules[ngDialogData.rank].type }} </h3> <p><span class="label label-default" ng-class="{ \'label-success\': ngDialogData.questions >= ngDialogData.rules[ngDialogData.rank].q }">{{ ngDialogData.questions + \'/\' + ngDialogData.rules[ngDialogData.rank].q }} Perguntas</span></p> <p><span class="label label-default" ng-class="{ \'label-success\': ngDialogData.answers >= ngDialogData.rules[ngDialogData.rank].a }">{{ ngDialogData.answers + \'/\' + ngDialogData.rules[ngDialogData.rank].a }} Respostas</span></p> <p><span class="label label-default" ng-class="{ \'label-success\': ngDialogData.score >= ngDialogData.rules[ngDialogData.rank].s }">{{ ngDialogData.score + \'/\' + ngDialogData.rules[ngDialogData.rank].s }} Upvotes - Downvotes</span></p> </div> <div> <hr> <button class="btn btn-success btn-block" type="button" ng-click="confirm()">Continuar</button> </div> </div>'),a.put("views/my-profile.html",'<div class="container"> <div class="row"> <div class="col-md-8 col-md-offset-2"> <h1>Meu Perfil</h1> <br> <form name="myProfileForm" novalidate ng-submit="updateProfile()"> <div class="form-group"> <label class="control-label">Nome</label> <input ng-model="profile.name" type="text" class="form-control" placeholder="Nome" name="name" required> <p ng-if="myProfileForm.name.$error.length && myProfileForm.$submitted" class="help-block text-danger">Este campo é obrigatório</p> </div> <div class="form-group"> <label class="control-label">Email</label> <input ng-model="profile.email" type="email" class="form-control" placeholder="Email" name="email" required> <p ng-if="myProfileForm.email.$error.length && myProfileForm.$submitted" class="help-block text-danger">Este campo é obrigatório</p> </div> <div class="form-group"> <label class="control-label">Usuário</label> <input ng-model="profile.username" type="text" class="form-control" placeholder="Usuário" name="username" required> <p ng-if="myProfileForm.username.$error.length && myProfileForm.$submitted" class="help-block text-danger">Este campo é obrigatório</p> </div> <div class="form-group"> <label>Tags de interesse</label> <tags-input ng-model="profile.tags" display-property="name" add-from-autocomplete-only="true"> <auto-complete source="loadTags($query)"></auto-complete> </tags-input> </div> <div class="form-group"> <button type="submit" class="btn btn-success btn-lg btn-block" ng-disabled="loading">{{ loading ? \'Salvando...\' : \'Salvar\' }}</button><br> </div> </form> <form name="newPasswordForm"> <div class="form-group"> <label class="control-label">Redefinir senha</label> <input ng-model="newPassword" type="text" class="form-control" placeholder="Nova senha" name="password"> <p ng-if="newPasswordForm.password.$error && newPasswordForm.$submitted" class="help-block text-danger">Este campo é obrigatório</p> </div> <div class="form-group"> <button type="submit" class="btn btn-primary btn-block">Salvar</button><br> </div> </form> </div> </div> </div>'),a.put("views/new-question.html",'<div class="container"> <div class="row"> <div class="col-md-8 col-md-offset-2"> <h1>Nova Pergunta</h1> <br> <form name="newQuestionForm" novalidate ng-submit="newQuestion()"> <div class="form-group"> <label class="control-label">Título</label> <input ng-model="newQuestion.title" type="text" class="form-control" placeholder="Título da pergunta" name="title" required> <p ng-if="newQuestionForm.title.$invalid && newQuestionForm.$submitted" class="help-block text-danger">Este campo é obrigatório</p> </div> <div class="form-group"> <label class="control-label">Conteúdo</label> <textarea name="body" ng-model="newQuestion.body" class="form-control" rows="10" placeholder="Descreva detalhadamente sua dúvida..." required></textarea> <p ng-if="newQuestionForm.body.$invalid && newQuestionForm.$submitted" class="help-block text-danger">Este campo é obrigatório</p> </div> <div class="form-group"> <label>Tags</label> <tags-input ng-model="newQuestion.tags" display-property="name" add-from-autocomplete-only="true" replace-spaces-with-dashes="false" ng-disabled="!tags.length"> <auto-complete source="loadTags($query)"></auto-complete> </tags-input> </div> <div class="form-group"> <button ng-disabled="!newQuestionForm.$valid || loading" type="submit" class="btn btn-success btn-lg btn-block">Enviar</button><br> </div> </form> </div> </div> </div>'),a.put("views/partials/header.html",'<header class="main-header"> <nav class="navbar navbar-default navbar-fixed-top"> <div class="container-fluid"> <div class="navbar-header"> <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1"> <span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> <a class="navbar-brand" ui-sref="main.home">Be My Brain</a> </div> <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1"> <ul class="nav navbar-nav navbar-right"> <li class="hidden"><a href="#page-top"></a></li> <li class="page-scroll"><a ui-sref="main.home">Sobre</a></li> <li><a ui-sref="main.questions" ui-sref-opts="{reload: true, inherit: false}">Perguntas</a></li> <li ng-if="isLoggedIn()"><a ui-sref="main.mydashboard" ui-sref-opts="{reload: true, inherit: false}">Dashboard</a></li> <li ng-if="!isLoggedIn()"><a ui-sref="main.login">Login/Cadastro</a></li> <li class="dropdown" ng-if="isLoggedIn()"> <a href="" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"><i class="fa fa-cog"></i></a> <ul class="dropdown-menu"> <li><a ui-sref="main.questions({ userId: \'my-questions\' })">Minhas perguntas</a></li> <li><a ui-sref="main.myprofile">Meu perfil</a></li> <li role="separator" class="divider"></li> <li><a ui-sref="logout">Sair</a></li> </ul> </li> <li class="active"><a ui-sref="main.newquestion">Nova pergunta</a></li> </ul> </div> </div> </nav> </header>'),
a.put("views/question.html",'<div class="container"> <div class="row"> <!-- Blog Post Content Column --> <div class="col-lg-8 col-lg-offset-2"> <ol class="breadcrumb"> <li><a ui-sref="main.home">Home</a></li> <li><a ui-sref="main.questions">Perguntas</a></li> <li class="active">{{ question.title }}</li> </ol> <!-- Title --> <article class="main-section question-detail" ng-if="question._id"> <vote-box ng-if="!isAuthor" question="question" class="pull-right"></vote-box> <p><a class="color-1" ui-sref="main.dashboard({ userId: question.author._id })"><i class="glyphicon glyphicon-user" width="60px" height="60px" href="#"></i> {{ question.author.name || question.author.username || \'Usuário\' }}</a> - <i class="glyphicon glyphicon-time"></i> {{ question.date | date : \'dd MMM yyyy, h:mm a\' }}</p> <h2>{{ question.title }}</h2> <br> <div class="question-body"> {{ question.body }} </div> <br> <ul class="list-inline" ng-if="question.tags.length"> <li>Tags:</li> <li ng-repeat="tag in question.tags"><span class="label label-default">{{ tag.name }}</span></li> </ul> </article> <hr> <!-- Comment --> <div class="answer-list" ng-if="question._id && answers.length"> <h3>Melhores respostas:</h3> <div class="panel panel-default media" ng-repeat="answer in answers | orderBy : [\'-score\', \'-date\']"> <div class="panel-body"> <vote-box ng-if="answer.author._id !== currentUser._id" answer="answer" class="pull-right"></vote-box> <div class="media-body"> <user-avatar user="answer.author"></user-avatar> <h4 class="media-heading"><a class="color-1" ui-sref="main.dashboard({ userId: answer.author._id })">{{ answer.author.name || answer.author.username || \'Usuário\' }}</a> <small ng-if="isAuthorsChoice(answer)"><i class="glyphicon glyphicon-star"></i> Escolha do autor</small></h4> <p><small>Postado em {{ answer.date | date : \'dd MMM yyyy, h:mm a\' }}</small></p> <p>{{ answer.body }}</p> </div> </div> </div> </div> <div class="alert alert-info" ng-if="answers.length === 0">Ninguém respondeu ainda!</div> <hr> <!-- Comments Form --> <div class="new-answer" ng-if="isLoggedIn()"> <h3>Responda:</h3> <div class="form-group"> <textarea class="form-control" ng-model="newAnswer.body" rows="5" placeholder="Sabe a resposta?"></textarea> </div> <button type="button" ng-click="sendAnswer()" class="btn btn-success" ng-disabled="loading || !newAnswer.body.length">Enviar</button> </div> <hr> </div> </div></div>'),a.put("views/questions.html",'<div class="container"> <div class="row"> <!-- Blog Entries Column --> <div class="col-md-8"> <section class="search-box"> <h4>Encontre</h4> <div class="input-group"> <input type="text" class="form-control" ng-model="query" placeholder="Ex: Métodos em java..."> <span class="input-group-btn"> <button class="btn btn-primary" type="button" ng-click="search(query)"> <span class="glyphicon glyphicon-search"></span> </button> </span> </div> <br> </section> <div class="panel panel-default question-item" ng-repeat="question in questions | orderBy : [\'-score\', \'-date\'] | filter : query"> <div class="panel-body"> <div class="row"> <div class="col-xs-11"> <p><a class="color-1" ui-sref="main.dashboard({ userId: question.author._id })"><i class="glyphicon glyphicon-user" width="60px" height="60px" href="#"></i> {{ question.author.name || question.author.username || \'Usuário\' }}</a> - <i class="glyphicon glyphicon-time"></i> {{ question.date | date : \'dd MMM yyyy, h:mm a\' }}</p> </div> <div class="col-xs-1 text-center" ng-if="userInfo._id === question.author._id"> <a href="" bs-dropdown aria-haspopup="true" aria-expanded="false"><i class="fa fa-cog" aria-hidden="true"></i></a> <ul class="dropdown-menu" role="menu"> <li><a ui-sref="main.editquestion({ id: question._id })"><i class="fa fa-pencil" aria-hidden="true"></i> Editar pergunta</a></li> <li><a href ng-click="confirmDelete(question._id)"><i class="fa fa-trash-o" aria-hidden="true"></i> Excluir pergunta</a></li> </ul> </div> </div> <h3><a class="color-1" ui-sref="main.question({ id: question._id })">{{ question.title }}</a></h3> <p ng-if="question.body">{{ question.body | limitTo : 200 }} [...]</p> <div class="row"> <div class="col-sm-6"> <ul class="list-inline" ng-if="question.tags.length"> <li>Tags:</li> <li ng-repeat="tag in question.tags"><span class="label label-default">{{ tag.name }}</span></li> </ul> </div> <div class="col-sm-6 text-right"> <a class="btn btn-info" ui-sref="main.question({ id: question._id })">Responder <i class="glyphicon glyphicon-chevron-right"></i></a> </div> </div> </div> </div> <h3 class="text-center" ng-if="!questions.length">Ninguém perguntou ainda!</h3> <p class="text-center" ng-if="!loading"><button class="btn btn-success btn-block" ng-click="loadMore()">Carregar mais</button></p> <br> </div> <main-sidebar> </div> </div>'),a.put("views/templates/main-sidebar.html",'<div class="col-md-4"> <aside class="main-sidebar"> <div ng-if="isLoggedIn()"> <h4>Evolua</h4> <div class="well"> <div class="row"> <div class="col-xs-4"> <img ng-src="../images/rank/rank-{{ dashboard.rank > 0 ? dashboard.rank : 0 }}.png" alt="" class="img-responsive"> </div> <div class="col-xs-8"> <p><span class="label label-default" ng-class="{ \'label-success\': dashboard.questions >= dashboard.rules[dashboard.rank + 1].q }">{{ dashboard.questions + \'/\' + dashboard.rules[dashboard.rank + 1].q }} Perguntas</span></p> <p><span class="label label-default" ng-class="{ \'label-success\': dashboard.answers >= dashboard.rules[dashboard.rank + 1].a }">{{ dashboard.answers + \'/\' + dashboard.rules[dashboard.rank + 1].a }} Respostas</span></p> <p><span class="label label-default" ng-class="{ \'label-success\': dashboard.score >= dashboard.rules[dashboard.rank + 1].s }">{{ dashboard.score + \'/\' + dashboard.rules[dashboard.rank + 1].s }} Upvotes - Downvotes</span></p> </div> </div> </div> <hr> </div> <div> <h4>Aprenda</h4> <ul class="list-inline"> <li ng-repeat="tag in tags"> <a ui-sref="tag({ tagId: tag._id })" class="label label-primary">{{ tag.name }}</a> </li> </ul> </div> </aside> </div>'),a.put("views/templates/user-avatar.html",'<figure class="user-avatar"> <img class="user-avatar-img" src="../images/beMyBrainLogo.png" width="64" height="64"> <img ng-src="../images/rank/rank-{{ user.rank > 0 ? user.rank : 0 }}.png" alt="" class="user-avatar-medal" height="24"> </figure>'),a.put("views/templates/vote-box.html",'<div class="panel panel-default"> <div class="btn-group-vertical"> <button class="btn" ng-class="{ \'btn-link\': !hasVoted(\'up\'), \'btn-success\': hasVoted(\'up\') }" ng-click="upvote()" title=""> <i class="glyphicon glyphicon-chevron-up"></i> </button> <a disabled class="btn btn-default">{{ provider.score }}</a> <button class="btn" ng-class="{ \'btn-link\': !hasVoted(\'down\'), \'btn-danger\': hasVoted(\'down\') }" ng-click="downvote()"> <i class="glyphicon glyphicon-chevron-down"></i> </button> </div> </div>')}]);